// This file is generated by rust-protobuf 2.2.0. Do not edit
// @generated

// https://github.com/Manishearth/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy)]

#![cfg_attr(rustfmt, rustfmt_skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unsafe_code)]
#![allow(unused_imports)]
#![allow(unused_results)]

use protobuf::Message as Message_imported_for_functions;
use protobuf::ProtobufEnum as ProtobufEnum_imported_for_functions;

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\nkvpb.proto\x12\x04kvpb\x1a\rkvrpcpb.proto\x1a\reraftpb.proto2\xf9\
    \x01\n\x02kv\x12)\n\x03Get\x12\x0e.kvrpcpb.KvReq\x1a\x10.kvrpcpb.GetResp\
    \"\0\x12)\n\x03Put\x12\x0e.kvrpcpb.KvReq\x1a\x10.kvrpcpb.PutResp\"\0\x12\
    /\n\x06Delete\x12\x0e.kvrpcpb.KvReq\x1a\x13.kvrpcpb.DeleteResp\"\0\x12-\
    \n\x04Raft\x12\x10.eraftpb.Message\x1a\x11.kvrpcpb.RaftDone\"\0\x12=\n\
    \x0eRaftConfChange\x12\x16.kvrpcpb.ConfChangeReq\x1a\x11.kvrpcpb.RaftDon\
    e\"\0J\xdd\x02\n\x06\x12\x04\0\0\x0c\x01\n\x08\n\x01\x0c\x12\x03\0\0\x12\
    \n\x08\n\x01\x02\x12\x03\x01\x08\x0c\n\t\n\x02\x03\0\x12\x03\x03\x07\x16\
    \n\t\n\x02\x03\x01\x12\x03\x04\x07\x16\n\n\n\x02\x06\0\x12\x04\x06\0\x0c\
    \x01\n\n\n\x03\x06\0\x01\x12\x03\x06\x08\n\n\x0b\n\x04\x06\0\x02\0\x12\
    \x03\x07\x025\n\x0c\n\x05\x06\0\x02\0\x01\x12\x03\x07\x06\t\n\x0c\n\x05\
    \x06\0\x02\0\x02\x12\x03\x07\n\x17\n\x0c\n\x05\x06\0\x02\0\x03\x12\x03\
    \x07\"1\n\x0b\n\x04\x06\0\x02\x01\x12\x03\x08\x025\n\x0c\n\x05\x06\0\x02\
    \x01\x01\x12\x03\x08\x06\t\n\x0c\n\x05\x06\0\x02\x01\x02\x12\x03\x08\n\
    \x17\n\x0c\n\x05\x06\0\x02\x01\x03\x12\x03\x08\"1\n\x0b\n\x04\x06\0\x02\
    \x02\x12\x03\t\x02;\n\x0c\n\x05\x06\0\x02\x02\x01\x12\x03\t\x06\x0c\n\
    \x0c\n\x05\x06\0\x02\x02\x02\x12\x03\t\r\x1a\n\x0c\n\x05\x06\0\x02\x02\
    \x03\x12\x03\t%7\n\x0b\n\x04\x06\0\x02\x03\x12\x03\n\x028\n\x0c\n\x05\
    \x06\0\x02\x03\x01\x12\x03\n\x06\n\n\x0c\n\x05\x06\0\x02\x03\x02\x12\x03\
    \n\x0b\x1a\n\x0c\n\x05\x06\0\x02\x03\x03\x12\x03\n$4\n\x0b\n\x04\x06\0\
    \x02\x04\x12\x03\x0b\x02H\n\x0c\n\x05\x06\0\x02\x04\x01\x12\x03\x0b\x06\
    \x14\n\x0c\n\x05\x06\0\x02\x04\x02\x12\x03\x0b\x15*\n\x0c\n\x05\x06\0\
    \x02\x04\x03\x12\x03\x0b4Db\x06proto3\
";

static mut file_descriptor_proto_lazy: ::protobuf::lazy::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::lazy::Lazy {
    lock: ::protobuf::lazy::ONCE_INIT,
    ptr: 0 as *const ::protobuf::descriptor::FileDescriptorProto,
};

fn parse_descriptor_proto() -> ::protobuf::descriptor::FileDescriptorProto {
    ::protobuf::parse_from_bytes(file_descriptor_proto_data).unwrap()
}

pub fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    unsafe {
        file_descriptor_proto_lazy.get(|| {
            parse_descriptor_proto()
        })
    }
}
